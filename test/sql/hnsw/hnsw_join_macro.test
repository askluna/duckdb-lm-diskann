require lm_diskann

statement ok
CREATE TABLE t1 (id int, vec FLOAT[3]);

statement ok
INSERT INTO t1 SELECT row_number() over (), array_value(a,b,c) FROM range(1,10) ra(a), range(1,10) rb(b), range(1,10) rc(c);

statement ok
CREATE TABLE s(s_vec FLOAT[3]);

statement ok
CREATE INDEX s_vec_idx ON t1 USING HNSW(vec);

statement ok
INSERT INTO s VALUES ([5,5,5]), ([1,1,1]);

statement ok
pragma disable_optimizer;

query I
SELECT bool_and(score <= 1.0) FROM lm_diskann_join(s, t1, s_vec, vec, 3) as res;
----
true

query I
SELECT len(matches) = 3 FROM s, lm_diskann_match(t1, s_vec, vec, 3) as res;
----
true
true

statement ok
pragma enable_optimizer;

query I
SELECT bool_and(score <= 1.0) FROM lm_diskann_join(s, t1, s_vec, vec, 3) as res;
----
true

query I
SELECT len(matches) = 3 FROM s, lm_diskann_match(t1, s_vec, vec, 3) as res;
----
true
true